# configuration file for git-cliff (0.1.0)

[changelog]
header = """
FloPy Changes
-----------------------------------------------

"""
body = """
{% if version %}\
    ### Version {{ version | trim_start_matches(pat="v") }}
{% else %}\
    ### [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    * {{ group | upper_first }}
    {% for commit in commits %}
        * {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
trim = true
footer = """
<!-- generated by git-cliff -->
"""

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_parsers = [
    { message = "^[fF]eat", group = "Features"},
    { message = "^[fF]ix", group = "Bug Fixes"},
    { message = "^[bB]ug", group = "Bug Fixes"},
    { message = "^[dD]oc.*", group = "Documentation"},
    { message = "^[pP]erf", group = "Performance"},
    { message = "^[rR]efactor", group = "Refactor"},
    { message = "^[uU]pdate", group = "Refactor"},
    { message = "^[sS]tyle", group = "Styling"},
    { message = "^[tT]est", group = "Testing"},
    { message = "^[cC][iI]", group = "Continuous integration"},
    { message = "^[cC][iI]\\(release\\):", skip = true},
    { message = "^[rR]elease", skip = true},
    { message = "^[cC]hore", group = "Miscellaneous tasks"},
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "[0-9].[0-9].[0-9]"
ignore_tags = ""
sort_commits = "oldest"
